    学习博客地址：https://www.jianshu.com/p/1ee38f446d1b    

   （1）数组：    

    数组在内存中的存放形式：

    拥有一段连续的存储单元，数据依次存放在每个单元中。

    数组的性质：
    
    1.因为需要在内存中寻找合适的一段连续存储单元，所以需要知道这一段存储单元的长度，故而创建一个数组时必须声明其长度。也正是因为数组的大小是固定的，所以无法动态调整数组的大小。

    2.因为数组中存放数据的数据单元的地址是连续的，所以可以很容易的找到第 i 个数据元素。时间复杂度为 O（n）。
 
    3.若需要查找某一元素，则需要遍历整个数组，时间复杂度为 O（n）。

    4.因其地址连续，对数组元素的增删便显得格外麻烦，需要对增删数据后面的所有元素进行向后或向前的移动，并且当数组满了之后就无法插入了。时间复杂度为 O（n）。

    5.数组需要一段完整的内存，可能产生碎片，若找不到合适的内存块，则会导致存储失败。

    总结：数组地址连续，长度固定，查找某一位置元素迅速，增删查（查找固定元素）较复杂。容易产生碎片。
    
   （2）链表：

    链表在内存中的存放形式：

    离散存储，地址不连续，每个数据元素拥有一个指向下一个数据元素地址的指针。

    链表的性质（单链表）：

    1.因为链表不需要连续的内存块，所以不需要声明链表的长度，其大小可以动态调整。
    
    2.链表的元素相较于数组多了一个存储指向下一个元素地址的指针域，所以占用内存会大一些。

    3.查找某一位置元素变得复杂，需要从头遍历到指定位置，查询某一个元素一样需要进行遍历，时间复杂度均为 O(n)。

    4.链表对于元素的增删操作会方便很多，只需要在对应节点合理的处理指针域的值即可。但增删的时间复杂度在不同的情况下会有差异：https://blog.csdn.net/gaoxiangnumber1/article/details/44634485（
单链表插入删除元素时间复杂度探究）。

    5.链表对内存的要求不像数组那样严格，只要能存储下一个数据元素的内存块都可以使用，不会产生碎片。

    总结：链表长度不必固定，可动态增删，单个数据元素所占内存更大，对内存要求不高，不会产生碎片，增删迅速，查询较复杂。

    数组与链表：数组按位查找快，链表增删更便捷。